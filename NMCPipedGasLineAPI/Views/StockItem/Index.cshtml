@model NMCPipedGasLineAPI.Models.StockItemMaster

@{

    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<script type="text/javascript">
    window.onload = window.history.forward(0);
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $(document).on('invalid-form.validate', 'form', function () {
        var button = $(this).find('input[type="submit"], button[type="submit"]');
        setTimeout(function () {
            button.removeAttr('disabled');
        }, 1);
    });
    $(document).on('submit', 'form', function () {
        var button = $(this).find('input[type="submit"], button[type="submit"]');
        setTimeout(function () {
            button.attr('disabled', 'disabled');
        }, 0);
    });


</script>




@using (Html.BeginForm("Index", "StockItem", FormMethod.Post))
{
    <h4>Stock Item Master</h4>
    <hr />


    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (ViewBag.Error != null)
        {

            <div style="color:red;">

                @(ViewBag.Error != null ? ViewBag.Error.ToString() : "")
            </div>

        }

        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputEmail4">Company <i class="text-danger">*</i></label>
                @if (Model.IsShow == 1)
                {@Html.DropDownListFor(model => model.CompanyId,
new SelectList(Model.Company, "Id", "CompanyName"), "Please Select Company", new { @class = "form-control", disabled = "disabled" })}
            else
            {
                @Html.DropDownListFor(model => model.CompanyId,
   new SelectList(Model.Company, "Id", "CompanyName"), "Please Select Company", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })}
                @Html.HiddenFor(m => m.CompanyId)

            </div>
            <div class="form-group col-md-6">
                <label for="inputPassword4">Name <i class="text-danger">*</i></label>
                @if (Model.IsShow == 1)
                {@Html.TextBoxFor(model => model.StockItemName, new { @class = "form-control", @placeholder = "Stock Item", @MaxLength = "50", disabled = "disabled" })
                @Html.HiddenFor(m => m.StockItemName)
            }
            else
            { @Html.TextBoxFor(model => model.StockItemName, new { @class = "form-control", @placeholder = "Stock Item", @MaxLength = "50" })}
                @Html.ValidationMessageFor(model => model.StockItemName, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.StockItemId)
                @Html.HiddenFor(m => m.month)
                @Html.HiddenFor(m => m.Year)
                @Html.HiddenFor(m => m.StockItemGasRateId)
                @Html.HiddenFor(m => m.CreatedDate)

            </div>
        </div>


        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputEmail4">Rate (Rs) <i class="text-danger">*</i></label>
                @*@{var formated = String.Format("{0:0.00}", Model.Rate);}*@
                @Html.TextBoxFor(model => model.Rate, new { @class = "form-control", @placeholder = "Rate", onkeypress = "return isNumberKey(event)" })
                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.IsShow)
            </div>


            <div class="form-group col-md-6">
                <label for="inputEmail4">Is Gas </label>
                @if (Model.IsShow == 1)
                {@Html.CheckBoxFor(m => m.IsGas, new { disabled = "disabled" })
                @Html.HiddenFor(m => m.IsGas)
            }
            else
            {@Html.CheckBoxFor(m => m.IsGas)}

            </div>


        </div>



        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputEmail5">weight (KG)<i class="text-danger">*</i></label>
                @Html.TextBoxFor(model => model.weight, new { @class = "form-control", @placeholder = "weight", onkeypress = "return isNumberKey(event)" })
                @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
            </div>


        </div>


        <div class="form-row">
            <div class="form-group col-md-6">
                <label for="inputEmail5">From Date<i class="text-danger"></i></label>
                @Html.EditorFor(model => model.RateDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>


            <div class="form-group col-md-6">
                <label for="inputEmail5">To Date<i class="text-danger"></i></label>
                @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>


        </div>



        <div class="form-group">
            <div class="col-md-12 d-flex justify-content-end px-0">
                <a href='@Url.Action("List", "StockItem")' class="mr-2 btn btn-dark">Cancel</a>
                @if (Session["RoleName"].ToString() == "Super Admin")
                {<input type="submit" value="Save" class="btn btn-dark-success" />}
            </div>
        </div>





    </div>

}


@*<div>
        @Html.ActionLink("Back to List", "List")
    </div>*@

<script type="text/javascript">
    $(document).ready(function () {
        var dateToday = new Date();

        $("#RateDate").datepicker({
            changeMonth: true,
            changeYear: true,
            //maxDate: dateToday,
            dateFormat: 'yy-mm-dd',
            buttonImageOnly: true, buttonImage: "Images/calendar.png",
        });

        $("#ToDate").datepicker({
            changeMonth: true,
            changeYear: true,
            //maxDate: dateToday,
            dateFormat: 'yy-mm-dd'

        });

    });
</script>